## Downloading the FASTQ-files from ArrayExpress
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/004/ERR2059824/ERR2059824.fastq.gz #sample1
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/005/ERR2059825/ERR2059825.fastq.gz #sample10
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/006/ERR2059826/ERR2059826.fastq.gz #sample11 
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/007/ERR2059827/ERR2059827.fastq.gz #sample12
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/008/ERR2059828/ERR2059828.fastq.gz #sample2
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/009/ERR2059829/ERR2059829.fastq.gz #sample3
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/000/ERR2059830/ERR2059830.fastq.gz #sample4
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/001/ERR2059831/ERR2059831.fastq.gz #sample5
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/002/ERR2059832/ERR2059832.fastq.gz #sample6
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/003/ERR2059833/ERR2059833.fastq.gz #sample7
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/004/ERR2059834/ERR2059834.fastq.gz #sample8
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR205/005/ERR2059835/ERR2059835.fastq.gz #sample9

# Alternative way to download the files:
wget https://www.ebi.ac.uk/arrayexpress/files/E-MTAB-5935/E-MTAB-5935.sdrf.txt
cut -f26 E-MTAB-5935.sdrf.txt > column_with_links.txt
tail -n +2 column_with_links.txt > links2download.txt
wget -N -i links2download # Did not run this

#Unzip the files
gunzip *.fastq.gz

mkdir large_data
mv *.fastq ./large_data

# Download the genome of Mycobacterium tuberculosis from NCBI
# Get the files from https://www.ncbi.nlm.nih.gov/genome?LinkName=nuccore_genome&from_uid=444893469, 
# right click on the Download sequences in FASTA format for genome, protein -> genome, copy linkadress
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/195/955/GCF_000195955.2_ASM19595v2/GCF_000195955.2_ASM19595v2_genomic.fna.gz 
gunzip GCF_000195955.2_ASM19595v2_genomic.fna.gz
mv GCF_000195955.2_ASM19595v2_genomic.fna reference_sequence.fasta
mkdir data
mv reference_sequence.fasta ./data

## Aligning 

#Index the reference genome
bwa index ./data/reference_sequence.fasta

#Create folder for samfiles
mkdir samfiles

#Align sample 1
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059824.fastq > ./samfiles/sample1.sam

#Align sample 10
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059825.fastq > ./samfiles/sample10.sam

#Align sample 11
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059826.fastq > ./samfiles/sample11.sam

#Align sample 12
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059827.fastq > ./samfiles/sample12.sam

#Align sample 2
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059828.fastq > ./samfiles/sample2.sam

#Align sample 3
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059829.fastq > ./samfiles/sample3.sam

#Align sample 4
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059830.fastq > ./samfiles/sample4.sam

#Align sample 5
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059831.fastq > ./samfiles/sample5.sam

#Align sample 6
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059832.fastq > ./samfiles/sample6.sam

#Align sample 7
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059833.fastq > ./samfiles/sample7.sam

#Align sample 8
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059834.fastq > ./samfiles/sample8.sam

#Align sample 9
bwa mem ./data/reference_sequence.fasta ./large_data/ERR2059835.fastq > ./samfiles/sample9.sam

# fast quality control of all samples
for i in {24..35}; do fastqc ./large_data/ERR20598$i.fastq; done
# could use this instead
fastqc *.fastq

# make a new directory
mkdir ./large_data/fastqc_files

# move files to own folder
mv *_fastqc* ./large_data/fastqc_files

#Convert samfiles into sorted bam files and bai files
cd samfiles
for file in *.sam; do samtools view -bS $file > ${file/.sam/.bam}; done
for file in *.bam; do samtools sort $file > ${file/.bam/.sorted.bam}; done
for file in *.sorted.bam do samtools index $file; done
cd ..

mkdir results
samtools mpileup -g -f data/reference_sequence.fasta samfiles/sample1.sorted.bam > results/sample1_variants.bcf

# .bcf format into .vcf format
for file in ./results/*_variants.bcf; do bcftools call -c -v $file > ${file/.bcf/.vcf}; done

# View .vfd file
less -S results/sample1_variants.vcf

#Filtering

#Filter reading depth to maximum 400
for file in ./samfiles/*.sorted.bam; do samtools depth $file | awk '$3<400' | cut -f 2 > ${file/.sorted.bam/.filtered.positions}; done
mkdir ../results/filtering
mv *.filtered.positions ./results/filtering

#Filter quality to minimum 10





#### Det här nedan kan beehöva ändras

#Extract positions for snps
cd results
for file in *_variants.vcf; do cut -f 2 $file | sort > ./snp_positions/${file/_variants.vcf/_snp_pos}; done

#Extract positions that are unique in the DCS-resistant samples (samples 2-12), compared to the WT sample (sample 1)
for file in *_snp_pos; do if [ $file != sample1_snp_pos ]; then comm -23 $file sample1_snp_pos > ${file/_snp_pos/_unique_snp_pos}; fi; done
cd ..

# sort with the quality score, start from line just above the numbers,  
tail -n +32 sample5_variants.vcf |sort -n -k 6 > sorted_qualityscore_vcf/sample5_variants.vcf.sortedqs

# keep headline, and choose the ones with quality score >10
awk -F"\t" 'NR==1||$6>10' sample1_variants.vcf.sortedqs

# Calculate average coverage for all samples
for i in {1..12}; do samtools depth samfiles/sample$i.sorted.bam | awk '{sum+=$3} END {print "Average = ",sum/4411532}'; done
